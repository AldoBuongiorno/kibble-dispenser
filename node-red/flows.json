[
    {
        "id": "c2efbb9d6f4ed7fd",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ff891277f53e0293",
        "type": "ui_tab",
        "name": "Home",
        "icon": "looks",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f54372b43cdc3c39",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#a000cc",
                "baseFont": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#770bb1",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#770bb1",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#770bb1",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#a518f1",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#770bb1",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "594e2b943ae5f19a",
        "type": "ui_group",
        "name": "Capacità",
        "tab": "ff891277f53e0293",
        "order": 1,
        "disp": false,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "efc7c89dfa0e5254",
        "type": "mqtt-broker",
        "name": "MyMosquitto",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "bcd52fed18f2f30a",
        "type": "ui_group",
        "name": "Logs",
        "tab": "3a8075c535cc3c5c",
        "order": 2,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3a8075c535cc3c5c",
        "type": "ui_tab",
        "name": "Data",
        "icon": "show_chart",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ea496e20c388a317",
        "type": "ui_group",
        "name": "Capacità1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "817ec23e5ad8fd57",
        "type": "ui_group",
        "name": "Logs1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c63399b3f0aa3666",
        "type": "ui_spacer",
        "z": "c2efbb9d6f4ed7fd",
        "name": "spacer",
        "group": "594e2b943ae5f19a",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "a90e4a7574849a9b",
        "type": "ui_spacer",
        "z": "c2efbb9d6f4ed7fd",
        "name": "spacer",
        "group": "594e2b943ae5f19a",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "f441a53e3f3cc6af",
        "type": "ui_spacer",
        "z": "c2efbb9d6f4ed7fd",
        "name": "spacer",
        "group": "594e2b943ae5f19a",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "5d7b780d1325102e",
        "type": "mqtt in",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Capacità dispenser",
        "topic": "unisa/IoT/gruppo07/pienezza_dispenser",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "efc7c89dfa0e5254",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 640,
        "wires": [
            [
                "5cea7edd64fec94e"
            ]
        ]
    },
    {
        "id": "fa2dc71f77bfc4e6",
        "type": "mqtt in",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Il cane ha pranzato",
        "topic": "unisa/IoT/gruppo07/giveTreatAutoLaunch",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "efc7c89dfa0e5254",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 100,
        "wires": [
            [
                "4a3e8672b9a992a0",
                "30f75955162f0477",
                "25cf2c57edb54250"
            ]
        ]
    },
    {
        "id": "45a5313cb016fabd",
        "type": "ui_gauge",
        "z": "c2efbb9d6f4ed7fd",
        "name": "",
        "group": "594e2b943ae5f19a",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Percentuale di pienezza del dispeser",
        "label": "%",
        "format": "{{msg.payload.percentage}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ff0000",
            "#fff700",
            "#4dff00"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 910,
        "y": 640,
        "wires": []
    },
    {
        "id": "30f75955162f0477",
        "type": "ui_toast",
        "z": "c2efbb9d6f4ed7fd",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Il cane ha pranzato",
        "name": "Il cane ha pranzato",
        "x": 630,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "cf926253dda0a884",
        "type": "ui_toast",
        "z": "c2efbb9d6f4ed7fd",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Il cane ha cenato",
        "name": "Il cane ha cenato",
        "x": 630,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "3b51c5ea5148774c",
        "type": "ui_button",
        "z": "c2efbb9d6f4ed7fd",
        "name": "",
        "group": "594e2b943ae5f19a",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Eroga croccantini",
        "tooltip": "",
        "color": "White",
        "bgcolor": "Black",
        "className": "",
        "icon": "touch_app",
        "payload": "true",
        "payloadType": "bool",
        "topic": "unisa/IoT/gruppo07/giveTreat",
        "topicType": "msg",
        "x": 350,
        "y": 280,
        "wires": [
            [
                "93ead14df62a38a8",
                "751d9596d23f13a4",
                "de682967d8a733c0"
            ]
        ]
    },
    {
        "id": "93ead14df62a38a8",
        "type": "debug",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Debug Give Croccantini",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 220,
        "wires": []
    },
    {
        "id": "751d9596d23f13a4",
        "type": "mqtt out",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Manuale",
        "topic": "unisa/IoT/gruppo07/giveTreat",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "efc7c89dfa0e5254",
        "x": 600,
        "y": 280,
        "wires": []
    },
    {
        "id": "25cf2c57edb54250",
        "type": "debug",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Pet Nearby Lunch",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 160,
        "wires": []
    },
    {
        "id": "3bcb228a63d3304f",
        "type": "debug",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Pet Nearby Dinner",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 520,
        "wires": []
    },
    {
        "id": "18a8f41887ee3eb5",
        "type": "ui_chart",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Food",
        "group": "bcd52fed18f2f30a",
        "order": 1,
        "width": 12,
        "height": 9,
        "label": "Chart",
        "chartType": "line",
        "legend": "true",
        "xformat": "D/M",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "24",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#8b20ee",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1430,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "de682967d8a733c0",
        "type": "function",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Acquire datetime",
        "func": "if(msg.payload){\n    let date = new Date();\n    let ora = date.getHours();\n    let minuti = date.getMinutes();\n    let giorno = date.getDate();\n    let mese = date.getMonth()+1;\n    let json = {\n        \"giorno\": giorno,\n        \"mese\" : mese,\n        \"ora\": ora,\n        \"minuti\": minuti\n    }\n    msg.payload = JSON.stringify(json);\n    msg.payload = json;\n    msg.topic = \"Manuale\"\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 340,
        "wires": [
            [
                "1685fcc8aef1f7dd",
                "36a2633c860385df"
            ]
        ]
    },
    {
        "id": "1685fcc8aef1f7dd",
        "type": "change",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Acquire hours",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.ora",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "18a8f41887ee3eb5"
            ]
        ]
    },
    {
        "id": "4a3e8672b9a992a0",
        "type": "function",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Acquire datetime",
        "func": "if(typeof(msg.payload) === 'string'){\n    let date = new Date();\n    let ora = date.getHours();\n    let minuti = date.getMinutes();\n    let giorno = date.getDate();\n    let mese = date.getMonth()+1;\n    let json = {\n        \"giorno\": giorno,\n        \"mese\" : mese,\n        \"ora\": ora,\n        \"minuti\": minuti\n    }\n    msg.payload = JSON.stringify(json);\n    msg.payload = json;\n    msg.topic = \"Pranzo automatico\"\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 40,
        "wires": [
            [
                "8d0f3a222b8e6eae",
                "36a2633c860385df"
            ]
        ]
    },
    {
        "id": "8d0f3a222b8e6eae",
        "type": "change",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Acquire hours",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.ora",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 100,
        "wires": [
            [
                "05938a3b81b82c1c",
                "18a8f41887ee3eb5"
            ]
        ]
    },
    {
        "id": "05938a3b81b82c1c",
        "type": "debug",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Check data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 100,
        "wires": []
    },
    {
        "id": "d671a4400ef5b659",
        "type": "mqtt in",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Il cane ha cenato",
        "topic": "unisa/IoT/gruppo07/giveTreatAutoDinner",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "efc7c89dfa0e5254",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 340,
        "y": 520,
        "wires": [
            [
                "3bcb228a63d3304f",
                "cf926253dda0a884",
                "39a6b62cfe2cd70d"
            ]
        ]
    },
    {
        "id": "997ea8b94a958241",
        "type": "ui_toast",
        "z": "c2efbb9d6f4ed7fd",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Il cane ha mangiato",
        "name": "Croccantini Erogati",
        "x": 610,
        "y": 1020,
        "wires": []
    },
    {
        "id": "89963cd571d116eb",
        "type": "debug",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Notifica Croccantini Erogati ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 940,
        "wires": []
    },
    {
        "id": "3d32d3403aad7b26",
        "type": "mqtt in",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Croccantini Erogati",
        "topic": "unisa/IoT/gruppo07/treatGiven",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "efc7c89dfa0e5254",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 980,
        "wires": [
            [
                "89963cd571d116eb",
                "997ea8b94a958241"
            ]
        ]
    },
    {
        "id": "39a6b62cfe2cd70d",
        "type": "function",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Acquire datetime",
        "func": "if(msg.payload){\n    let date = new Date();\n    let ora = date.getHours();\n    let minuti = date.getMinutes();\n    let giorno = date.getDate();\n    let mese = date.getMonth()+1;\n    let json = {\n        \"giorno\": giorno,\n        \"mese\" : mese,\n        \"ora\": ora,\n        \"minuti\": minuti\n    }\n    msg.payload = JSON.stringify(json);\n    msg.payload = json;\n    msg.topic = \"Cena automatico\"\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 460,
        "wires": [
            [
                "314a145e32a6c304",
                "36a2633c860385df"
            ]
        ]
    },
    {
        "id": "9388d81a84bbf170",
        "type": "debug",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Check data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 460,
        "wires": []
    },
    {
        "id": "314a145e32a6c304",
        "type": "change",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Acquire hours",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.ora",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 460,
        "wires": [
            [
                "9388d81a84bbf170",
                "18a8f41887ee3eb5"
            ]
        ]
    },
    {
        "id": "36a2633c860385df",
        "type": "function",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Traduzione",
        "func": "let infos = msg.payload;\nlet topic = msg.topic;\nvar string_infos = 'Tipo:' + topic + ',' + 'Giorno:' \n+ infos.giorno + ',' + 'Mese:' + infos.mese + ','\n+ 'Ora:' + infos.ora + ',' + 'Minuti:' + infos.minuti + \";\";\nreturn { payload: string_infos };",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 280,
        "wires": [
            [
                "c8c9a576a827e46b",
                "d15c47fe12012f03"
            ]
        ]
    },
    {
        "id": "d15c47fe12012f03",
        "type": "file",
        "z": "c2efbb9d6f4ed7fd",
        "name": "",
        "filename": "/data/prova.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1160,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c8c9a576a827e46b",
        "type": "debug",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Check data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 320,
        "wires": []
    },
    {
        "id": "5a0c454ebdd871af",
        "type": "ui_button",
        "z": "c2efbb9d6f4ed7fd",
        "name": "",
        "group": "594e2b943ae5f19a",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "white",
        "bgcolor": "red",
        "className": "",
        "icon": "replay",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 1100,
        "wires": [
            [
                "a923faa959c935da"
            ]
        ]
    },
    {
        "id": "a923faa959c935da",
        "type": "mqtt out",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Restart",
        "topic": "unisa/IoT/gruppo07/reset",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "efc7c89dfa0e5254",
        "x": 640,
        "y": 1100,
        "wires": []
    },
    {
        "id": "1fa9168d3a13b777",
        "type": "mqtt in",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Capacità dispenser",
        "topic": "unisa/IoT/gruppo07/almostEmpty",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "efc7c89dfa0e5254",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 780,
        "wires": [
            [
                "4964a56aa8c5ca19",
                "a9213bfc54b66564",
                "049cd26d1c77efaf"
            ]
        ]
    },
    {
        "id": "0868e6145653f1da",
        "type": "ui_toast",
        "z": "c2efbb9d6f4ed7fd",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Capacity Alert",
        "name": "Capacity Alert",
        "x": 1560,
        "y": 720,
        "wires": []
    },
    {
        "id": "bf62d722cc232cfb",
        "type": "switch",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Check capacity",
        "property": "payload.percentage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "20",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 820,
        "y": 720,
        "wires": [
            [
                "0c57daf18adc59f3"
            ]
        ]
    },
    {
        "id": "653c3899466a66b5",
        "type": "function",
        "z": "c2efbb9d6f4ed7fd",
        "name": "takeNotificationAlmostEmpty",
        "func": "let string = JSON.stringify(msg.payload.notificationAlmostEmpty);\nmsg.payload = string.replace(/\"/g, '');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 720,
        "wires": [
            [
                "0868e6145653f1da"
            ]
        ]
    },
    {
        "id": "0837640008553bd0",
        "type": "ui_toast",
        "z": "c2efbb9d6f4ed7fd",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Capacity Alert",
        "name": "Capacity Alert",
        "x": 1220,
        "y": 780,
        "wires": []
    },
    {
        "id": "4964a56aa8c5ca19",
        "type": "switch",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Check capacity ",
        "property": "payload.percentage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 620,
        "y": 780,
        "wires": [
            [
                "083b347829918aa2"
            ]
        ]
    },
    {
        "id": "083b347829918aa2",
        "type": "function",
        "z": "c2efbb9d6f4ed7fd",
        "name": "takeNotificationEmpty",
        "func": "let string = JSON.stringify(msg.payload.notificationEmpty);\nmsg.payload = string.replace(/\"/g, '');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 780,
        "wires": [
            [
                "0837640008553bd0"
            ]
        ]
    },
    {
        "id": "31d47a1a65719cec",
        "type": "ui_toast",
        "z": "c2efbb9d6f4ed7fd",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Capacity Alert",
        "name": "Capacity Alert",
        "x": 1220,
        "y": 840,
        "wires": []
    },
    {
        "id": "a9213bfc54b66564",
        "type": "switch",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Check capacity ",
        "property": "payload.percentage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "-1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 620,
        "y": 840,
        "wires": [
            [
                "4054c49ac75c66a6"
            ]
        ]
    },
    {
        "id": "4054c49ac75c66a6",
        "type": "function",
        "z": "c2efbb9d6f4ed7fd",
        "name": "takeNotificationError",
        "func": "let string = JSON.stringify(msg.payload.notificationError);\nmsg.payload = string.replace(/\"/g, '');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 840,
        "wires": [
            [
                "31d47a1a65719cec"
            ]
        ]
    },
    {
        "id": "5cea7edd64fec94e",
        "type": "function",
        "z": "c2efbb9d6f4ed7fd",
        "name": "correctPercentage",
        "func": "if(msg.payload.percentage == -1.0)\n    msg.payload.percentage = 0\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 640,
        "wires": [
            [
                "45a5313cb016fabd"
            ]
        ]
    },
    {
        "id": "0c57daf18adc59f3",
        "type": "switch",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Check emptiness",
        "property": "payload.percentage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1030,
        "y": 720,
        "wires": [
            [
                "653c3899466a66b5"
            ]
        ]
    },
    {
        "id": "049cd26d1c77efaf",
        "type": "switch",
        "z": "c2efbb9d6f4ed7fd",
        "name": "Check error",
        "property": "payload.percentage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "-1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 720,
        "wires": [
            [
                "bf62d722cc232cfb"
            ]
        ]
    },
    {
        "id": "1357061e6fee6e57",
        "type": "mqtt in",
        "z": "c2efbb9d6f4ed7fd",
        "name": "",
        "topic": "unisa/IoT/gruppo07/acquireTime",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "efc7c89dfa0e5254",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 390,
        "y": 1220,
        "wires": [
            [
                "cbf080c6b085af40"
            ]
        ]
    },
    {
        "id": "9cc9cae2df5b54e5",
        "type": "mqtt out",
        "z": "c2efbb9d6f4ed7fd",
        "name": "",
        "topic": "unisa/IoT/gruppo07/takeTime",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "efc7c89dfa0e5254",
        "x": 880,
        "y": 1220,
        "wires": []
    },
    {
        "id": "cbf080c6b085af40",
        "type": "function",
        "z": "c2efbb9d6f4ed7fd",
        "name": "acquireTime",
        "func": "if(msg.payload == 'Acquisici'){\n    let date = new Date();\n    msg.payload = date.getHours();\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1220,
        "wires": [
            [
                "9cc9cae2df5b54e5"
            ]
        ]
    }
]